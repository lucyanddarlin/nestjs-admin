import fs from 'node:fs'
import path from 'node:path'
import dotenv from 'dotenv'

const directoryPath = path.resolve(__dirname, '..')
const targets = ['.env', `.env.${process.env.NODE_ENV || 'development'}`]
const envObj = targets.reduce((perv, file) => {
  const result = dotenv.parse(fs.readFileSync(path.join(directoryPath, file)))
  return { ...perv, ...result }
}, {})
const envType = Object.entries<string>(envObj).reduce(
  (perv, [key, value]) =>
    `${perv}${key}: '${value}';`,
  '',
).trim()

fs.writeFile(path.join(directoryPath, 'types/env.d.ts'), `
// generated by ./scripts/generateEnvTypes.ts
declare global {
  namespace NodeJS {
    interface ProcessEnv {
      ${envType}
    }
  }
}
export {};
`, (err) => {
  if (!err)
    console.log('generate env.d.ts successfully')
  else
    console.log(`fail to generate env.d.ts: ${JSON.stringify(err)}`)
})
